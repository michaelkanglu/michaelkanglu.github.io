{"version":3,"sources":["serviceWorker.ts","components/hooks/useStorageBackedState.tsx","state/GameState.ts","state/RandomSpectrumTarget.ts","state/RandomFourCharacterString.ts","components/common/LayoutElements.tsx","components/common/GetContrastingColors.ts","components/common/Title.tsx","components/gameplay/InputName.tsx","state/GameModelContext.ts","components/common/Spectrum.tsx","components/common/Button.tsx","components/common/Info.tsx","components/common/Animate.tsx","components/gameplay/GiveClue.tsx","state/GetScore.ts","state/ScoreRound.ts","components/gameplay/MakeGuess.tsx","TrackEvent.ts","state/SpectrumCards.ts","state/BuildGameModel.ts","state/NewRound.ts","components/gameplay/ViewScore.tsx","components/gameplay/JoinTeam.tsx","state/NewGame.ts","components/gameplay/Scoreboard.tsx","components/gameplay/SetupGame.tsx","components/gameplay/CounterGuess.tsx","components/gameplay/PreviousTurnResult.tsx","components/gameplay/ActiveGame.tsx","components/common/RoomIdHeader.tsx","components/gameplay/FakeRooms.tsx","components/gameplay/GameRoom.tsx","components/hooks/useNetworkBackedGameState.tsx","components/common/CommonFooter.tsx","components/common/LandingPage.tsx","components/App.tsx","index.tsx","firebaseConfig.ts"],"names":["Boolean","window","location","hostname","match","useStorageBackedState","initialValue","key","storedItem","localStorage","getItem","setItem","JSON","stringify","parse","useState","value","setValue","newValue","RoundPhase","GameType","Team","RandomSpectrumTarget","Math","floor","random","RandomFourCharacterString","characters","randomString","i","length","TeamReverse","team","Left","Right","Unset","TeamName","InitialGameState","gameType","Teams","roundPhase","SetupGame","turnsTaken","deckSeed","deckIndex","spectrumTarget","clue","guess","counterGuess","players","clueGiver","leftScore","rightScore","coopScore","coopBonusTurns","previousTurn","baseFlexStyles","display","flexFlow","justifyContent","alignItems","CenteredRow","props","style","children","CenteredColumn","ColorScheme","require","GetContrastingColors","hue","scheme","from_hue","variation","colors","LongwaveAppTitle","setHue","primary","secondary","useEffect","interval","setInterval","clearInterval","backgroundImage","WebkitBackgroundClip","WebkitTextFillColor","InputName","inputRef","useRef","type","ref","onKeyDown","event","current","setName","GameModelContext","createContext","gameState","localPlayer","id","name","spectrumCard","setGameState","newState","console","warn","Spectrum","acc","charCodeAt","getStringHash","cardBackStyle","padding","fontWeight","handleStyle","height","width","backgroundColor","borderColor","dotStyle","cursor","bottom","borderWidth","transform","onChange","boxShadow","undefined","handleValue","marks","targetValue","color","label","guessingValue","min","max","trackStyle","railStyle","background","Button","margin","text","onClick","disabled","Info","content","placement","icon","faInfoCircle","Animate","animation","className","setClassName","setTimeout","GiveClue","useContext","inputElement","disableSubmit","setDisableSubmit","submit","MakeGuess","Cooperative","placeholder","GetScore","target","difference","abs","ScoreTeamRound","guessingTeam","pointsScored","wasCounterGuessCorrect","finalState","ViewScore","notMyTurn","guessingTeamString","Object","keys","border","href","eventName","eventBody","spectrum_card","join","toString","analytics","logEvent","app_name","screen_name","CounterGuess","effectivePointsScored","ScoreCoopRound","AllCards","shuffleSeed","getSeededDeck","memoize","seed","cards","shuffle","BuildGameModel","localPlayerId","spectrumDeck","NewRound","playerId","gameModel","clueGiverName","score","bonusCoopTurn","NextTurnOrEndGame","resetButton","scoringTeamString","bonusTurn","nextTeam","eligibleToDraw","JoinTeam","leftTeam","filter","rightTeam","joinTeam","alignSelf","map","PickTeams","startPlayer","initialScores","NewTeamGame","Scoreboard","borderTop","paddingTop","Freeplay","flexWrap","toPlayerRow","cardsRemaining","TeamColumn","members","AnimatableScore","lastScore","position","fontSize","top","right","PlayerRow","player","hovered","setHovered","iconContainerStyle","marginLeft","onMouseEnter","onMouseLeave","faTimesCircle","startGame","counterGuessTeamString","PreviousTurnResult","zIndex","left","ActiveGame","RoomIdHeader","roomId","useParams","RoomMenu","interactive","tabIndex","faEllipsisV","FakeRooms","ul","ll","ur","lr","setPartialGameState","renderGame","Provider","GameRoom","Error","playerName","setPlayerName","dbRef","database","on","appState","networkGameState","val","completeGameState","set","off","useNetworkBackedGameState","searchParams","URLSearchParams","search","get","rocketcrabPlayerName","CommonFooter","flexDirection","Link","alt","title","src","rel","LandingPage","history","useHistory","push","maxWidth","App","path","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.67e82131.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function useStorageBackedState<T>(initialValue: T, key: string): [T, (value: T) => void] {\r\n  const storedItem = localStorage.getItem(key);\r\n  if (storedItem == null) {\r\n    localStorage.setItem(key, JSON.stringify(initialValue));\r\n  } else {\r\n    initialValue = JSON.parse(storedItem);\r\n  }\r\n  \r\n  const [value, setValue] = useState(initialValue);\r\n  \r\n  return [\r\n    value,\r\n    (newValue: T) => {\r\n      localStorage.setItem(key, JSON.stringify(newValue));\r\n      setValue(newValue);\r\n    },\r\n  ];\r\n}\r\n","import { RandomSpectrumTarget } from \"./RandomSpectrumTarget\";\r\nimport { RandomFourCharacterString } from \"./RandomFourCharacterString\";\r\n\r\nexport enum RoundPhase {\r\n  SetupGame,\r\n  PickTeams,\r\n  GiveClue,\r\n  MakeGuess,\r\n  CounterGuess,\r\n  ViewScore,\r\n}\r\n\r\nexport enum GameType {\r\n  Teams,\r\n  Cooperative,\r\n  Freeplay,\r\n}\r\n\r\nexport enum Team {\r\n  Unset,\r\n  Left,\r\n  Right,\r\n}\r\n\r\nexport function TeamReverse(team: Team) {\r\n  if (team === Team.Left) {\r\n    return Team.Right;\r\n  }\r\n  if (team === Team.Right) {\r\n    return Team.Left;\r\n  }\r\n  return Team.Unset;\r\n}\r\n\r\nexport function TeamName(team: Team) {\r\n  if (team === Team.Left) {\r\n    return \"LEFT BRAIN\";\r\n  }\r\n  if (team === Team.Right) {\r\n    return \"RIGHT BRAIN\";\r\n  }\r\n  return \"the players\";\r\n}\r\n\r\nexport type PlayersTeams = {\r\n  [playerId: string]: {\r\n    name: string;\r\n    team: Team;\r\n  };\r\n};\r\n\r\nexport type TurnSummaryModel = {\r\n  spectrumCard: [string, string];\r\n  clueGiverName: string;\r\n  clue: string;\r\n  spectrumTarget: number;\r\n  guess: number;\r\n};\r\n\r\nexport interface GameState {\r\n  gameType: GameType;\r\n  roundPhase: RoundPhase;\r\n  turnsTaken: number;\r\n  deckSeed: string;\r\n  deckIndex: number;\r\n  spectrumTarget: number;\r\n  clue: string;\r\n  guess: number;\r\n  counterGuess: \"left\" | \"right\";\r\n  players: PlayersTeams;\r\n  clueGiver: string;\r\n  leftScore: number;\r\n  rightScore: number;\r\n  coopScore: number;\r\n  coopBonusTurns: number;\r\n  previousTurn: TurnSummaryModel | null;\r\n}\r\n\r\nexport function InitialGameState(): GameState {\r\n  return {\r\n    gameType: GameType.Teams,\r\n    roundPhase: RoundPhase.SetupGame,\r\n    turnsTaken: -1,\r\n    deckSeed: RandomFourCharacterString(),\r\n    deckIndex: 0,\r\n    spectrumTarget: RandomSpectrumTarget(),\r\n    clue: \"\",\r\n    guess: 0,\r\n    counterGuess: \"left\",\r\n    players: {},\r\n    clueGiver: \"\",\r\n    leftScore: 0,\r\n    rightScore: 0,\r\n    coopScore: 0,\r\n    coopBonusTurns: 0,\r\n    previousTurn: null,\r\n  };\r\n}\r\n","export function RandomSpectrumTarget() {\r\n  return Math.floor(Math.random() * 21);\r\n}\r\n","export function RandomFourCharacterString() {\r\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\r\n  let randomString = \"\";\r\n  for (let i = 0; i < 4; i++) {\r\n    randomString += characters[Math.floor(Math.random() * characters.length)];\r\n  }\r\n  return randomString;\r\n}\r\n","import React from \"react\";\r\n\r\nconst baseFlexStyles: React.CSSProperties = {\r\n  display: \"flex\",\r\n  flexFlow: \"row\",\r\n  justifyContent: \"space-evenly\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nexport function CenteredRow(props: {\r\n  children: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...baseFlexStyles,\r\n        flexFlow: \"row\",\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CenteredColumn(props: {\r\n  children: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...baseFlexStyles,\r\n        flexFlow: \"column\",\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","const ColorScheme: any = require(\"color-scheme\");\r\n\r\nexport function GetContrastingColors(hue: number): [string, string] {\r\n  const scheme = new ColorScheme();\r\n  scheme.from_hue(hue).scheme(\"contrast\").variation(\"soft\");\r\n  const [primary, , , , secondary]: string[] = scheme.colors();\r\n  return [\"#\" + primary, \"#\" + secondary];\r\n}\r\n","import React from \"react\";\r\nimport { GetContrastingColors } from \"./GetContrastingColors\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport function LongwaveAppTitle() {\r\n  const [hue, setHue] = useState(0);\r\n  const [primary, secondary] = GetContrastingColors(hue);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setHue((hue) => (hue + 1) % 360);\r\n    }, 5);\r\n    return () => clearInterval(interval);\r\n  });\r\n  return (\r\n    <h1\r\n      style={{\r\n        backgroundImage: `linear-gradient(90deg, ${primary} 10%, ${secondary} 90%)`,\r\n        WebkitBackgroundClip: \"text\",\r\n        WebkitTextFillColor: \"transparent\",\r\n      }}\r\n    >\r\n      Longwave\r\n    </h1>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { CenteredColumn } from \"../common/LayoutElements\";\r\nimport { LongwaveAppTitle } from \"../common/Title\";\r\n\r\nexport function InputName(props: { setName: (name: string) => void }) {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  return (\r\n    <CenteredColumn>\r\n      <LongwaveAppTitle />\r\n      <div>Enter your name:</div>\r\n      <input\r\n        type=\"text\"\r\n        ref={inputRef}\r\n        onKeyDown={(event) => {\r\n          if (!inputRef.current) {\r\n            return false;\r\n          }\r\n          if (event.key !== \"Enter\") {\r\n            return true;\r\n          }\r\n          props.setName(inputRef.current.value);\r\n        }}\r\n      />\r\n    </CenteredColumn>\r\n  );\r\n}\r\n","import { Team, InitialGameState } from \"./GameState\";\r\nimport { createContext } from \"react\";\r\nimport { GameModel } from \"./BuildGameModel\";\r\n\r\nexport const GameModelContext = createContext<GameModel>({\r\n  gameState: InitialGameState(),\r\n  localPlayer: {\r\n    id: \"localPlayer\",\r\n    name: \"Player\",\r\n    team: Team.Unset,\r\n  },\r\n  clueGiver: null,\r\n  spectrumCard: [\"left\", \"right\"],\r\n  setGameState: (newState) => {\r\n    console.warn(\r\n      \"GameModelContext not provided. Got setGameState: \" +\r\n        JSON.stringify(newState)\r\n    );\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { CenteredColumn, CenteredRow } from \"./LayoutElements\";\r\nimport { GetContrastingColors } from \"./GetContrastingColors\";\r\n\r\nexport function Spectrum(props: {\r\n  spectrumCard: [string, string];\r\n  handleValue?: number;\r\n  targetValue?: number;\r\n  guessingValue?: number;\r\n  onChange?: (newValue: number) => void;\r\n}) {\r\n  const [primary, secondary] = GetContrastingColors(\r\n    getStringHash(props.spectrumCard[0])\r\n  );\r\n  const cardBackStyle: React.CSSProperties = {\r\n    padding: 8,\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  let handleStyle: React.CSSProperties = {\r\n    height: 18,\r\n    width: 18,\r\n    backgroundColor: \"rgba(255,255,255,0.8)\",\r\n    borderColor: \"black\",\r\n  };\r\n\r\n  const dotStyle = {\r\n    ...handleStyle,\r\n    cursor: \"auto\",\r\n    bottom: -9,\r\n    borderWidth: 4,\r\n    transform: \"translateX(-5px)\",\r\n  };\r\n\r\n  if (!props.onChange) {\r\n    handleStyle.cursor = \"auto\";\r\n    handleStyle.boxShadow = \"none\";\r\n  }\r\n\r\n  if (props.handleValue === undefined) {\r\n    handleStyle.display = \"none\";\r\n  }\r\n\r\n  let marks: {\r\n    [n: number]: { style: React.CSSProperties; label: string };\r\n  } = {};\r\n\r\n  if (props.targetValue !== undefined) {\r\n    marks[props.targetValue] = {\r\n      style: { fontWeight: \"bold\", color: \"black\", cursor: \"auto\" },\r\n      label: \"Target\",\r\n    };\r\n  }\r\n\r\n  if (props.guessingValue !== undefined) {\r\n    marks[props.guessingValue] = {\r\n      style: { fontWeight: \"bold\", color: \"black\", cursor: \"auto\" },\r\n      label: \"Guessing...\",\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 8 }}>\r\n      <CenteredColumn style={{ alignItems: \"stretch\" }}>\r\n        <CenteredRow style={{ justifyContent: \"space-between\" }}>\r\n          <div style={{ ...cardBackStyle, backgroundColor: primary }}>\r\n            {props.spectrumCard[0]}\r\n          </div>\r\n          <div style={{ ...cardBackStyle, backgroundColor: secondary }}>\r\n            {props.spectrumCard[1]}\r\n          </div>\r\n        </CenteredRow>\r\n        <div style={{ padding: \"16px 32px\" }}>\r\n          <Slider\r\n            min={0}\r\n            max={20}\r\n            value={props.handleValue}\r\n            trackStyle={{\r\n              backgroundColor: \"transparent\",\r\n            }}\r\n            railStyle={{\r\n              background: `linear-gradient(90deg, ${primary} 0%, ${secondary} 100%)`,\r\n              height: 8,\r\n            }}\r\n            handleStyle={handleStyle}\r\n            onChange={props.onChange}\r\n            marks={marks}\r\n            dotStyle={dotStyle}\r\n          />\r\n        </div>\r\n      </CenteredColumn>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getStringHash(value: string) {\r\n  let acc = 0;\r\n  for (let i = 0; i < value.length; i++) {\r\n    acc += value.charCodeAt(i);\r\n  }\r\n  return acc;\r\n}\r\n","import React from \"react\";\r\nexport function Button(props: { text: string; onClick: () => void; disabled?: boolean }) {\r\n  return (\r\n    <input\r\n      style={{\r\n        padding: 8,\r\n        margin: 8,\r\n      }}\r\n      type=\"button\"\r\n      value={props.text}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport { ReactElement } from \"react\";\r\n\r\nexport function Info(props: { children: string | ReactElement<any> }) {\r\n  return (\r\n    <Tippy content={props.children} placement=\"bottom\">\r\n      <div style={{ margin: 8 }}>\r\n        <FontAwesomeIcon icon={faInfoCircle} />\r\n      </div>\r\n    </Tippy>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function Animate(props: {\r\n  children: React.ReactNode;\r\n  animation: \"wipe-reveal-right\" | \"fade-disappear-up\";\r\n  style?: React.CSSProperties;\r\n}) {\r\n  const [className, setClassName] = useState<string>(props.animation);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      return setClassName(props.animation + \" animate\");\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className={className} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useContext, useState } from \"react\";\r\n\r\nimport { GameType, RoundPhase } from \"../../state/GameState\";\r\nimport { Spectrum } from \"../common/Spectrum\";\r\nimport { CenteredColumn, CenteredRow } from \"../common/LayoutElements\";\r\nimport { Button } from \"../common/Button\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { RandomSpectrumTarget } from \"../../state/RandomSpectrumTarget\";\r\nimport { Info } from \"../common/Info\";\r\nimport { Animate } from \"../common/Animate\";\r\n\r\nexport function GiveClue() {\r\n  const {\r\n    gameState,\r\n    localPlayer,\r\n    clueGiver,\r\n    spectrumCard,\r\n    setGameState,\r\n  } = useContext(GameModelContext);\r\n  const inputElement = useRef<HTMLInputElement>(null);\r\n  const [disableSubmit, setDisableSubmit] = useState(\r\n    !inputElement.current?.value?.length\r\n  );\r\n\r\n  if (!clueGiver) {\r\n    setGameState({\r\n      clueGiver: localPlayer.id,\r\n    });\r\n    return null;\r\n  }\r\n\r\n  if (localPlayer.id !== clueGiver.id) {\r\n    return (\r\n      <div>\r\n        <Animate animation=\"wipe-reveal-right\">\r\n          <Spectrum spectrumCard={spectrumCard} />\r\n        </Animate>\r\n        <CenteredColumn>\r\n          <div>Waiting for {clueGiver.name} to provide a clue...</div>\r\n        </CenteredColumn>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const submit = () => {\r\n    if (!inputElement.current?.value?.length) {\r\n      return false;\r\n    }\r\n\r\n    setGameState({\r\n      clue: inputElement.current.value,\r\n      guess: 10,\r\n      roundPhase: RoundPhase.MakeGuess,\r\n    });\r\n  };\r\n\r\n  const redrawCard = () =>\r\n    setGameState({\r\n      deckIndex: gameState.deckIndex + 1,\r\n      spectrumTarget: RandomSpectrumTarget(),\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      {gameState.gameType !== GameType.Cooperative && (\r\n        <CenteredColumn style={{ alignItems: \"flex-end\" }}>\r\n          <Button text=\"Draw a different card\" onClick={redrawCard} />\r\n        </CenteredColumn>\r\n      )}\r\n      <Animate animation=\"wipe-reveal-right\">\r\n        <Spectrum\r\n          targetValue={gameState.spectrumTarget}\r\n          spectrumCard={spectrumCard}\r\n        />\r\n      </Animate>\r\n      <CenteredColumn>\r\n        <CenteredRow>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Clue...\"\r\n            ref={inputElement}\r\n            onKeyDown={(event) => {\r\n              if (event.key !== \"Enter\") {\r\n                return true;\r\n              }\r\n              submit();\r\n            }}\r\n            onChange={() =>\r\n              setDisableSubmit(!inputElement.current?.value?.length)\r\n            }\r\n          />\r\n          <Info>\r\n            <div>\r\n              Your clue should be some concept that lies on the provided\r\n              spectrum, conceptually located where the target is between the two\r\n              extremes. For example, \"coffee\" might be a good clue that lies on\r\n              a spectrum of \"hot\" to \"cold\".\r\n              <ul>\r\n                <li>Convey a single thought</li>\r\n                <li>Stay on topic</li>\r\n                <li>No numbers allowed</li>\r\n                <li>Be creative!</li>\r\n              </ul>\r\n            </div>\r\n          </Info>\r\n        </CenteredRow>\r\n        <Button text=\"Submit Clue\" onClick={submit} disabled={disableSubmit} />\r\n      </CenteredColumn>\r\n    </div>\r\n  );\r\n}\r\n","export function GetScore(target: number, guess: number) {\r\n  const difference = Math.abs(target - guess);\r\n  if (difference > 2) {\r\n    return 0;\r\n  }\r\n  return 4 - Math.floor(difference);\r\n}\r\n","import { GameState, RoundPhase, Team } from \"./GameState\";\r\nimport { GetScore } from \"./GetScore\";\r\n\r\nexport function ScoreCoopRound(gameState: GameState): Partial<GameState> {\r\n  const effectivePointsScored = GetScore(\r\n    gameState.spectrumTarget,\r\n    gameState.guess\r\n  );\r\n  let finalState: Partial<GameState> = {\r\n    roundPhase: RoundPhase.ViewScore,\r\n  }\r\n  \r\n  if (effectivePointsScored === 4) {\r\n    finalState.coopScore = gameState.coopScore + 3;\r\n    finalState.coopBonusTurns = gameState.coopBonusTurns + 1\r\n  } else {\r\n    finalState.coopScore = gameState.coopScore + effectivePointsScored;\r\n  }\r\n\r\n  return finalState;\r\n}\r\n\r\nexport function ScoreTeamRound(\r\n  gameState: GameState,\r\n  guessingTeam: Team,\r\n  counterGuess: \"left\" | \"right\"\r\n): Partial<GameState> {\r\n  const pointsScored = GetScore(gameState.spectrumTarget, gameState.guess);\r\n  const wasCounterGuessCorrect =\r\n    (counterGuess === \"left\" && gameState.spectrumTarget < gameState.guess) ||\r\n    (counterGuess === \"right\" && gameState.spectrumTarget > gameState.guess);\r\n\r\n  let finalState: Partial<GameState> = {\r\n    roundPhase: RoundPhase.ViewScore,\r\n    counterGuess,\r\n  };\r\n\r\n  if (guessingTeam === Team.Right) {\r\n    finalState.rightScore = gameState.rightScore + pointsScored;\r\n    finalState.leftScore =\r\n      gameState.leftScore + (wasCounterGuessCorrect ? 1 : 0);\r\n  }\r\n\r\n  if (guessingTeam === Team.Left) {\r\n    finalState.leftScore = gameState.leftScore + pointsScored;\r\n    finalState.rightScore =\r\n      gameState.rightScore + (wasCounterGuessCorrect ? 1 : 0);\r\n  }\r\n\r\n  return finalState;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GameType, RoundPhase, TeamName } from \"../../state/GameState\";\r\nimport { Spectrum } from \"../common/Spectrum\";\r\nimport { CenteredColumn } from \"../common/LayoutElements\";\r\nimport { Button } from \"../common/Button\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { RecordEvent } from \"../../TrackEvent\";\r\nimport { ScoreCoopRound } from \"../../state/ScoreRound\";\r\n\r\nexport function MakeGuess() {\r\n  const {\r\n    gameState,\r\n    localPlayer,\r\n    clueGiver,\r\n    spectrumCard,\r\n    setGameState,\r\n  } = useContext(GameModelContext);\r\n\r\n  if (!clueGiver) {\r\n    return null;\r\n  }\r\n\r\n  const notMyTurn =\r\n    localPlayer.id === clueGiver.id ||\r\n    (gameState.gameType === GameType.Teams &&\r\n      localPlayer.team !== clueGiver.team);\r\n\r\n  const guessingTeamString = TeamName(clueGiver.team);\r\n\r\n  if (notMyTurn) {\r\n    return (\r\n      <div>\r\n        <Spectrum spectrumCard={spectrumCard} guessingValue={gameState.guess} />\r\n        <CenteredColumn>\r\n          <div>\r\n            {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\r\n          </div>\r\n          <div>Waiting for {guessingTeamString} to guess...</div>\r\n          {Object.keys(gameState.players).length < 2 && (\r\n            <div\r\n              style={{\r\n                margin: 12,\r\n                padding: \"0 1em\",\r\n                border: \"1px solid black\",\r\n              }}\r\n            >\r\n              <p>Invite other players to join the game.</p>\r\n              <p>Share this URL with them: {window.location.href}</p>\r\n            </div>\r\n          )}\r\n        </CenteredColumn>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Spectrum\r\n        spectrumCard={spectrumCard}\r\n        handleValue={gameState.guess}\r\n        onChange={(guess: number) => {\r\n          setGameState({\r\n            guess,\r\n          });\r\n        }}\r\n      />\r\n      <CenteredColumn>\r\n        <div>\r\n          {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            text={`Submit Guess for ${TeamName(localPlayer.team)}`}\r\n            onClick={() => {\r\n              RecordEvent(\"guess_submitted\", {\r\n                spectrum_card: spectrumCard.join(\"|\"),\r\n                clue: gameState.clue,\r\n                target: gameState.spectrumTarget.toString(),\r\n                guess: gameState.guess.toString(),\r\n              });\r\n\r\n              if (gameState.gameType === GameType.Teams) {\r\n                setGameState({\r\n                  roundPhase: RoundPhase.CounterGuess,\r\n                });\r\n              } else if (gameState.gameType === GameType.Cooperative) {\r\n                setGameState(ScoreCoopRound(gameState));\r\n              } else {\r\n                setGameState({\r\n                  roundPhase: RoundPhase.ViewScore,\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </CenteredColumn>\r\n    </div>\r\n  );\r\n}\r\n","import { analytics } from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\n\r\nexport function RecordEvent(\r\n  eventName: string,\r\n  eventBody: { [parameterName: string]: string }\r\n) {\r\n  analytics().logEvent(eventName, {\r\n    app_name: \"Longwave\",\r\n    screen_name: \"index\",\r\n    ...eventBody,\r\n  });\r\n}\r\n","const SpectrumCards: [string, string][] = [\r\n  [\"Bad actor\", \"Good actor\"],\r\n  [\"Basic\", \"Hipster\"],\r\n  [\"Worthless\", \"Priceless\"],\r\n  [\"Nature\", \"Nurture\"],\r\n  [\"Happens slowly\", \"Happens suddenly\"],\r\n  [\"Job\", \"Career\"],\r\n  [\"Round\", \"Pointy\"],\r\n  [\"Proof that God exists\", \"Proof that God doesn't exist\"],\r\n  [\"Loved\", \"Hated\"],\r\n  [\"The Light Side of the Force\", \"The Dark Side of the Force\"],\r\n  [\"Stupid\", \"Brilliant\"],\r\n  [\"Artisanal\", \"Mass Produced\"],\r\n  [\"Nobody does it\", \"Everybody does it\"],\r\n  [\"Short lived\", \"Long lived\"],\r\n  [\"Dangerous job\", \"Safe job\"],\r\n  [\"Fantasy\", \"Sci-Fi\"],\r\n  [\"Plain\", \"Fancy\"],\r\n  [\"Has a bad reputation\", \"Has a good reputation\"],\r\n  [\"Ethical to eat\", \"Unethical to eat\"],\r\n  [\"Movie\", \"Film\"],\r\n  [\"Unfashionable\", \"Fashionable\"],\r\n  [\"Freedom fighter\", \"Terrorist\"],\r\n  [\"Bad superpower\", \"Good superpower\"],\r\n  [\"Ineffective\", \"Effective\"],\r\n  [\"Better hot\", \"Better cold\"],\r\n  [\"Square\", \"Round\"],\r\n  [\"Temporary\", \"Permanent\"],\r\n  [\"Looks like a person\", \"Doesn't look like a person\"],\r\n  [\"Uncool\", \"Cool\"],\r\n  [\"Worst living person\", \"Greatest living person\"],\r\n  [\"Underrated\", \"Overrated\"],\r\n  [\"Messy food\", \"Clean food\"],\r\n  [\"Unforgivable\", \"Forgivable\"],\r\n  [\"Failure\", \"Masterpiece\"],\r\n  [\"Harmless\", \"Harmful\"],\r\n  [\"Gryffindor\", \"Slytherin\"],\r\n  [\"Unhygienic\", \"Hygienic\"],\r\n  [\"Bad music\", \"Good music\"],\r\n  [\"Useless\", \"Useful\"],\r\n  [\"Movie that Godzilla would ruin\", \"Movie that Godzilla would improve\"],\r\n  [\"Unimportant\", \"Important\"],\r\n  [\"Easy to spell\", \"Hard to spell\"],\r\n  [\"Vice\", \"Virtue\"],\r\n  [\"Underrated musician\", \"Overrated musician\"],\r\n  [\"Unpopular activity\", \"Popular activity\"],\r\n  [\"Divided\", \"Whole\"],\r\n  [\"Unreliable\", \"Reliable\"],\r\n  [\"Easy to kill\", \"Hard to kill\"],\r\n  [\"Unstable\", \"Stable\"],\r\n  [\"Round animal\", \"Pointy animal\"],\r\n  [\"Bad TV show\", \"Good TV show\"],\r\n  [\"Traditionally masculine\", \"Traditionally feminine\"],\r\n  [\"Useless body part\", \"Useful body part\"],\r\n  [\"Fad\", \"Classic\"],\r\n  [\"Weak\", \"Strong\"],\r\n  [\"Disgusting cereal\", \"Delicious cereal\"],\r\n  [\"Bad\", \"Good\"],\r\n  [\"Mildly addictive\", \"Highly addictive\"],\r\n  [\"Useless in an emergency\", \"Useful in an emergency\"],\r\n  [\"For kids\", \"For adults\"],\r\n  [\"Villain\", \"Hero\"],\r\n  [\"Underrated thing to do\", \"Overrated thing to do\"],\r\n  [\"Boring\", \"Exciting\"],\r\n  [\"Smelly in a bad way\", \"Smelly in a good way\"],\r\n  [\"Unpopular\", \"Popular\"],\r\n  [\"Friend\", \"Enemy\"],\r\n  [\"Useless invention\", \"Useful invention\"],\r\n  [\"Liberal\", \"Conservative\"],\r\n  [\"Hot\", \"Cold\"],\r\n  [\"Normal\", \"Weird\"],\r\n  [\"Colorless\", \"Colorful\"],\r\n  [\"Low calorie\", \"High calorie\"],\r\n  [\"Easy subject\", \"Hard subject\"],\r\n  [\"Unknown\", \"Famous\"],\r\n  [\"Rare\", \"Common\"],\r\n  [\"Unsexy emoji\", \"Sexy emoji\"],\r\n  [\"Cheap\", \"Expensive\"],\r\n  [\"Underrated weapon\", \"Overrated weapon\"],\r\n  [\"Feels bad\", \"Feels good\"],\r\n  [\"Inessential\", \"Essential\"],\r\n  [\"Dirty\", \"Clean\"],\r\n  [\"Requires luck\", \"Requires skill\"],\r\n  [\"Flavorless\", \"Flavorful\"],\r\n  [\"Boring topic\", \"Fascinating topic\"],\r\n  [\"Casual\", \"Formal\"],\r\n  [\"Underpaid\", \"Overpaid\"],\r\n  [\"Dry\", \"Wet\"],\r\n  [\"Underrated skill\", \"Overrated skill\"],\r\n  [\"Forbidden\", \"Encouraged\"],\r\n  [\"Sad song\", \"Happy song\"],\r\n  [\"Fragile\", \"Durable\"],\r\n  [\"Geek\", \"Dork\"],\r\n  [\"Good\", \"Evil\"],\r\n  [\"Worst day of the year\", \"Best day of the year\"],\r\n  [\"Bad habit\", \"Good habit\"],\r\n  [\"Cat person\", \"Dog person\"],\r\n  [\"Wise\", \"Intelligent\"],\r\n  [\"Hard to do\", \"Easy to do\"],\r\n  [\"Mental activity\", \"Physical activity\"],\r\n  [\"Uncontroversial topic\", \"Controversial topic\"],\r\n  [\"Guilty pleasure\", \"Openly love\"],\r\n  [\"Untalented\", \"Talented\"],\r\n  [\"Hard to find\", \"Easy to find\"],\r\n  [\"Ugly Man\", \"Beautiful Man\"],\r\n  [\"Hard to remember\", \"Easy to remember\"],\r\n  [\"Lowbrow\", \"Highbrow\"],\r\n  [\"Unhealthy\", \"Healthy\"],\r\n  [\"Bad man\", \"Good man\"],\r\n  [\"Historically important\", \"Historically irrelevant\"],\r\n  [\"Hairless\", \"Hairy\"],\r\n  [\"Inflexible\", \"Flexible\"],\r\n  [\"Normal pet\", \"Exotic pet\"],\r\n  [\"Introvert\", \"Extrovert\"],\r\n  [\"Book was better\", \"Movie was better\"],\r\n  [\"Bad movie\", \"Good movie\"],\r\n  [\"Ugly\", \"Beautiful\"],\r\n  [\"Mature person\", \"Immature person\"],\r\n  [\"Underrated thing to own\", \"Overrated thing to own\"],\r\n  [\"Ordinary\", \"Extraordinary\"],\r\n  [\"Hard to pronounce\", \"Easy to pronounce\"],\r\n  [\"Poorly made\", \"Well made\"],\r\n  [\"Not a sandwich\", \"A sandwich\"],\r\n  [\"Dangerous\", \"Safe\"],\r\n  [\"Culturally significant\", \"Culturally insignificant\"],\r\n  [\"Optional\", \"Mandatory\"],\r\n  [\"Underrated letter of the alphabet\", \"Overrated letter of the alphabet\"],\r\n  [\"Low quality\", \"High quality\"],\r\n  [\"Unsexy animal\", \"Sexy animal\"],\r\n  [\"Quiet place\", \"Loud place\"],\r\n  [\"Comedy\", \"Drama\"],\r\n  [\"Need\", \"Want\"],\r\n  [\"Dry food\", \"Wet food\"],\r\n  [\"Replaceable\", \"Irreplaceable\"],\r\n  [\"Worst athlete of all time\", \"Greatest athlete of all time\"],\r\n  [\"Unethical\", \"Ethical\"],\r\n  [\"Boring hobby\", \"Interesting hobby\"],\r\n  [\"Bad pizza topping\", \"Good pizza topping\"],\r\n  [\"Dystopia\", \"Utopia\"],\r\n  [\"Rough\", \"Smooth\"],\r\n  [\"Bad for you\", \"Good for you\"],\r\n  [\"Peaceful\", \"Warlike\"],\r\n  [\"Underrated Movie\", \"Overrated movie\"],\r\n  [\"Tastes bad\", \"Tastes good\"],\r\n  [\"Sport\", \"Game\"],\r\n  [\"Sad movie\", \"Happy movie\"],\r\n  [\"Waste of time\", \"Good use of time\"],\r\n  [\"Least evil company\", \"Most evil company\"],\r\n  [\"Snack\", \"Meal\"],\r\n  [\"Unbelievable\", \"Believable\"],\r\n  [\"Trashy\", \"Classy\"],\r\n  [\"Smells bad\", \"Smells good\"],\r\n  [\"Star Wars\", \"Star Trek\"],\r\n  [\"Scary animal\", \"Nice animal\"],\r\n  [\"Mainstream\", \"Niche\"],\r\n  [\"Dark\", \"Light\"],\r\n  [\"Underrated actor\", \"Overrated actor\"],\r\n  [\"Difficult to use\", \"Easy to use\"],\r\n  [\"Tired\", \"Wired\"],\r\n  [\"80s\", \"90s\"],\r\n  [\"Bad person\", \"Good person\"],\r\n  [\"Sustenance\", \"Haute cuisine\"],\r\n  [\"Soft\", \"Hard\"],\r\n  [\"Normal thing to own\", \"Weird thing to own\"],\r\n  [\"Straight\", \"Curvy\"],\r\n  [\"Role model\", \"Bad Influence\"],\r\n  [\"Useless major\", \"Useful major\"],\r\n  [\"Mean person\", \"Nice person\"],\r\n  [\"Action movie\", \"Adventure movie\"],\r\n];\r\n\r\nconst AdvancedSpectrumCards: [string, string][] = [\r\n  [\"Short\", \"Long\"],\r\n  [\"Worst year in history\", \"Best year in history\"],\r\n  [\"Famous\", \"Infamous\"],\r\n  [\"Least powerful god\", \"Most powerful god\"],\r\n  [\"Unsexy color\", \"Sexy color\"],\r\n  [\"Benefits you\", \"Benefits everyone\"],\r\n  [\"Bad president\", \"Good president\"],\r\n  [\"Weird\", \"Strange\"],\r\n  [\"Derivative\", \"Original\"],\r\n  [\"Etiquette\", \"Manners\"],\r\n  [\"The worst\", \"The best\"],\r\n  [\"Small number\", \"Large number\"],\r\n  [\"Not enough\", \"Too much\"],\r\n  [\"Hard to sit on\", \"Easy to sit on\"],\r\n  [\"Talent\", \"Skill\"],\r\n  [\"Worst era to time travel\", \"Best era to time travel\"],\r\n  [\"Not huggable\", \"Huggable\"],\r\n  [\"Heterogeneous\", \"Homogeneous\"],\r\n  [\"Out of control\", \"In control\"],\r\n  [\"Popular\", \"Elitist\"],\r\n  [\"Non-partisan\", \"Partisan\"],\r\n  [\"Dog name\", \"Cat name\"],\r\n  [\"Little known fact\", \"Well known fact\"],\r\n  [\"Socialist\", \"Capitalist\"],\r\n  [\"Bad candy\", \"Good candy\"],\r\n  [\"Traditional\", \"Radical\"],\r\n  [\"Bad mouthfeel\", \"Good mouthfeel\"],\r\n  [\"Illegal\", \"Legal\"],\r\n  [\"Never on time\", \"Always on time\"],\r\n  [\"Won't live to 100\", \"Will live to 100\"],\r\n  [\"Bad Disney character\", \"Good Disney character\"],\r\n  [\"Similar\", \"Identical\"],\r\n  [\"Limp\", \"Firm\"],\r\n  [\"Funny topic\", \"Serious topic\"],\r\n  [\"Unscented\", \"Scented\"],\r\n  [\"Horizontal\", \"Vertical\"],\r\n  [\"Small\", \"Tiny\"],\r\n  [\"Ugly word\", \"Beautiful word\"],\r\n  [\"Tick\", \"Tock\"],\r\n  [\"Bad advice\", \"Good advice\"],\r\n  [\"Illegal\", \"Prohibited\"],\r\n  [\"Not art\", \"Art\"],\r\n  [\"Gossip\", \"News\"],\r\n  [\"Guilty pleasure\", \"Actually just bad\"],\r\n  [\"Old fashioned\", \"Avant garde\"],\r\n  [\"True\", \"False\"],\r\n  [\"Normal greeting\", \"Weird greeting\"],\r\n  [\"Dictatorship\", \"Democracy\"],\r\n  [\"Powerless\", \"Powerful\"],\r\n  [\"Vapes\", \"Doesn't Vape\"],\r\n  [\"Boring person\", \"Fun person\"],\r\n  [\"Underrated book\", \"Overrated book\"],\r\n  [\"Deep thought\", \"Shallow thought\"],\r\n  [\"Bad school\", \"Good school\"],\r\n  [\"Conventional wisdom\", \"Fringe belief\"],\r\n  [\"Worst chore\", \"Best chore\"],\r\n  [\"Endangered species\", \"Overpopulated species\"],\r\n  [\"Blue\", \"Green\"],\r\n  [\"Fruit\", \"Vegetable\"],\r\n  [\"Science\", \"Pseudoscience\"],\r\n  [\"Small talk\", \"Heavy topic\"],\r\n  [\"Bad investment\", \"Good investment\"],\r\n  [\"Stationary\", \"Mobile\"],\r\n  [\"Local issue\", \"Global issue\"],\r\n  [\"Thrilling\", \"Terrifying\"],\r\n  [\"Nerd\", \"Jock\"],\r\n  [\"Expected\", \"Unexpected\"],\r\n  [\"Person you could beat up\", \"Person who'd beat you up\"],\r\n  [\"Limited\", \"Infinite\"],\r\n  [\"Casual event\", \"Formal event\"],\r\n  [\"Unreasonable phobia\", \"Reasonable phobia\"],\r\n  [\"Underrated game\", \"Overrated game\"],\r\n  [\"Religious\", \"Sacrilegious\"],\r\n  [\"Mild\", \"Spicy\"],\r\n  [\"Genuine person\", \"Phony person\"],\r\n  [\"Unnatural\", \"Natural\"],\r\n  [\"Secret\", \"Public Knowledge\"],\r\n  [\"Too small\", \"Too big\"],\r\n  [\"Art\", \"Commerce\"],\r\n  [\"One hit wonder\", \"Pop icon\"],\r\n  [\"Unsexy Pokémon\", \"Sexy Pokémon\"],\r\n  [\"Quiet\", \"Loud\"],\r\n  [\"Inclusive\", \"Exclusive\"],\r\n  [\"Bad dog (breed)\", \"Good dog (breed)\"],\r\n];\r\n\r\nexport const AllCards = [...SpectrumCards, ...AdvancedSpectrumCards];\r\n","import { GameState, Team } from \"./GameState\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { AllCards } from \"./SpectrumCards\";\r\n\r\nconst shuffleSeed: {\r\n  shuffle: <T>(arr: T[], seed: string) => T[];\r\n} = require(\"shuffle-seed\");\r\n\r\ntype Player = {\r\n  id: string;\r\n  name: string;\r\n  team: Team;\r\n};\r\n\r\nexport interface GameModel {\r\n  gameState: GameState;\r\n  localPlayer: Player;\r\n  clueGiver: Player | null;\r\n  spectrumCard: [string, string];\r\n  setGameState: (newState: Partial<GameState>) => void;\r\n}\r\n\r\nconst getSeededDeck = memoize((seed: string, cards: [string, string][]) =>\r\n  shuffleSeed.shuffle(cards, seed)\r\n);\r\n\r\nexport function BuildGameModel(\r\n  gameState: GameState,\r\n  setGameState: (newState: Partial<GameState>) => void,\r\n  localPlayerId: string\r\n): GameModel {\r\n  const clueGiver = gameState.players[gameState.clueGiver]\r\n    ? {\r\n        ...gameState.players[gameState.clueGiver],\r\n        id: gameState.clueGiver,\r\n      }\r\n    : null;\r\n\r\n  const spectrumDeck = getSeededDeck(gameState.deckSeed, AllCards);\r\n\r\n  return {\r\n    gameState,\r\n    localPlayer: { ...gameState.players[localPlayerId], id: localPlayerId },\r\n    clueGiver,\r\n    spectrumCard: spectrumDeck[gameState.deckIndex % spectrumDeck.length],\r\n    setGameState,\r\n  };\r\n}\r\n","import { RoundPhase, GameState } from \"./GameState\";\r\nimport { RandomSpectrumTarget } from \"./RandomSpectrumTarget\";\r\nimport { BuildGameModel } from \"./BuildGameModel\";\r\n\r\nexport function NewRound(\r\n  playerId: string,\r\n  gameState: GameState\r\n): Partial<GameState> {\r\n  const gameModel = BuildGameModel(gameState, () => {}, playerId);\r\n\r\n  const newState: Partial<GameState> = {\r\n    clueGiver: playerId,\r\n    roundPhase: RoundPhase.GiveClue,\r\n    deckIndex: gameState.deckIndex + 1,\r\n    turnsTaken: gameState.turnsTaken + 1,\r\n    spectrumTarget: RandomSpectrumTarget(),\r\n  };\r\n\r\n  if (gameModel.clueGiver !== null) {\r\n    newState.previousTurn = {\r\n      spectrumCard: gameModel.spectrumCard,\r\n      spectrumTarget: gameState.spectrumTarget,\r\n      clueGiverName: gameModel.clueGiver.name,\r\n      clue: gameState.clue,\r\n      guess: gameState.guess,\r\n    };\r\n  }\r\n\r\n  return newState;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GetScore } from \"../../state/GetScore\";\r\nimport { CenteredColumn, CenteredRow } from \"../common/LayoutElements\";\r\nimport { Spectrum } from \"../common/Spectrum\";\r\nimport { Button } from \"../common/Button\";\r\nimport {\r\n  GameType,\r\n  Team,\r\n  InitialGameState,\r\n  TeamName,\r\n  TeamReverse,\r\n} from \"../../state/GameState\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { NewRound } from \"../../state/NewRound\";\r\nimport { Info } from \"../common/Info\";\r\n\r\nexport function ViewScore() {\r\n  const { gameState, clueGiver, spectrumCard } = useContext(GameModelContext);\r\n\r\n  if (!clueGiver) {\r\n    return null;\r\n  }\r\n\r\n  let score = GetScore(gameState.spectrumTarget, gameState.guess);\r\n  let bonusCoopTurn = false;\r\n  if (gameState.gameType === GameType.Cooperative && score === 4) {\r\n    score = 3;\r\n    bonusCoopTurn = true;\r\n  }\r\n\r\n  const wasCounterGuessCorrect =\r\n    (gameState.counterGuess === \"left\" &&\r\n      gameState.spectrumTarget < gameState.guess) ||\r\n    (gameState.counterGuess === \"right\" &&\r\n      gameState.spectrumTarget > gameState.guess);\r\n\r\n  return (\r\n    <div>\r\n      <Spectrum\r\n        spectrumCard={spectrumCard}\r\n        handleValue={gameState.guess}\r\n        targetValue={gameState.spectrumTarget}\r\n      />\r\n      <CenteredColumn>\r\n        <div>\r\n          {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\r\n        </div>\r\n        <div>Score: {score} points!</div>\r\n        {gameState.gameType === GameType.Teams && (\r\n          <div>\r\n            {TeamName(TeamReverse(clueGiver.team))} gets\r\n            {wasCounterGuessCorrect\r\n              ? \" 1 point for their correct counter guess.\"\r\n              : \" 0 points for their counter guess.\"}\r\n          </div>\r\n        )}\r\n        {bonusCoopTurn && (\r\n          <div>\r\n            Your team earned a <strong>bonus turn!</strong>\r\n          </div>\r\n        )}\r\n        <NextTurnOrEndGame />\r\n      </CenteredColumn>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NextTurnOrEndGame() {\r\n  const { gameState, localPlayer, clueGiver, setGameState } = useContext(\r\n    GameModelContext\r\n  );\r\n\r\n  if (!clueGiver) {\r\n    return null;\r\n  }\r\n\r\n  const resetButton = (\r\n    <Button\r\n      text=\"Reset Game\"\r\n      onClick={() => {\r\n        setGameState({\r\n          ...InitialGameState(),\r\n          deckSeed: gameState.deckSeed,\r\n          deckIndex: gameState.deckIndex,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n\r\n  if (gameState.leftScore >= 10 && gameState.leftScore > gameState.rightScore) {\r\n    return (\r\n      <>\r\n        <div>{TeamName(Team.Left)} wins!</div>\r\n        {resetButton}\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (\r\n    gameState.rightScore >= 10 &&\r\n    gameState.rightScore > gameState.leftScore\r\n  ) {\r\n    return (\r\n      <>\r\n        <div>{TeamName(Team.Right)} wins!</div>\r\n        {resetButton}\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (\r\n    gameState.gameType === GameType.Cooperative &&\r\n    gameState.turnsTaken >= 7 + gameState.coopBonusTurns\r\n  ) {\r\n    return (\r\n      <>\r\n        <div>Game Complete</div>\r\n        <div>\r\n          Your team's final cooperative score:{\" \"}\r\n          <strong>{gameState.coopScore} POINTS</strong>\r\n        </div>\r\n        {resetButton}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const score = GetScore(gameState.spectrumTarget, gameState.guess);\r\n\r\n  const scoringTeamString = TeamName(clueGiver.team);\r\n\r\n  let bonusTurn = false;\r\n\r\n  const nextTeam = (() => {\r\n    if (gameState.gameType !== GameType.Teams) {\r\n      return Team.Unset;\r\n    }\r\n\r\n    if (score === 4) {\r\n      if (\r\n        gameState.leftScore < gameState.rightScore &&\r\n        clueGiver.team === Team.Left\r\n      ) {\r\n        bonusTurn = true;\r\n        return Team.Left;\r\n      }\r\n      if (\r\n        gameState.rightScore < gameState.leftScore &&\r\n        clueGiver.team === Team.Right\r\n      ) {\r\n        bonusTurn = true;\r\n        return Team.Right;\r\n      }\r\n    }\r\n\r\n    return TeamReverse(clueGiver.team);\r\n  })();\r\n\r\n  const eligibleToDraw = (() => {\r\n    if (clueGiver.id === localPlayer.id) {\r\n      return false;\r\n    }\r\n\r\n    if (gameState.gameType !== GameType.Teams) {\r\n      return true;\r\n    }\r\n\r\n    return localPlayer.team === nextTeam;\r\n  })();\r\n\r\n  return (\r\n    <>\r\n      {bonusTurn && (\r\n        <CenteredRow>\r\n          <div>Catchup activated: {scoringTeamString} takes a bonus turn! </div>\r\n          <Info>\r\n            After a team scores a four-point round, they get a bonus turn if\r\n            they are still behind the other team.\r\n          </Info>\r\n        </CenteredRow>\r\n      )}\r\n      {eligibleToDraw && (\r\n        <Button\r\n          text=\"Draw next Spectrum Card\"\r\n          onClick={() => setGameState(NewRound(localPlayer.id, gameState))}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\r\nimport { RoundPhase, Team, TeamName } from \"../../state/GameState\";\r\nimport { Button } from \"../common/Button\";\r\nimport { LongwaveAppTitle } from \"../common/Title\";\r\nimport { useContext } from \"react\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { NewTeamGame } from \"../../state/NewGame\";\r\n\r\nexport function JoinTeam() {\r\n  const { gameState, localPlayer, setGameState } = useContext(GameModelContext);\r\n\r\n  const leftTeam = Object.keys(gameState.players).filter(\r\n    (playerId) => gameState.players[playerId].team === Team.Left\r\n  );\r\n  const rightTeam = Object.keys(gameState.players).filter(\r\n    (playerId) => gameState.players[playerId].team === Team.Right\r\n  );\r\n\r\n  const joinTeam = (team: Team) => {\r\n    setGameState({\r\n      players: {\r\n        ...gameState.players,\r\n        [localPlayer.id]: {\r\n          ...localPlayer,\r\n          team,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const startGame = () =>\r\n    setGameState(\r\n      NewTeamGame(gameState.players, localPlayer.id, gameState)\r\n    );\r\n\r\n  return (\r\n    <CenteredColumn>\r\n      <LongwaveAppTitle />\r\n      <div>Join Team:</div>\r\n      <CenteredRow\r\n        style={{\r\n          alignItems: \"flex-start\",\r\n          alignSelf: \"stretch\",\r\n        }}\r\n      >\r\n        <CenteredColumn>\r\n          <div>{TeamName(Team.Left)}</div>\r\n          {leftTeam.map((playerId) => (\r\n            <div key={playerId}>{gameState.players[playerId].name}</div>\r\n          ))}\r\n          <div>\r\n            <Button text=\"Join\" onClick={() => joinTeam(Team.Left)} />\r\n          </div>\r\n        </CenteredColumn>\r\n        <CenteredColumn>\r\n          <div>{TeamName(Team.Right)}</div>\r\n          {rightTeam.map((playerId) => (\r\n            <div key={playerId}>{gameState.players[playerId].name}</div>\r\n          ))}\r\n          <div>\r\n            <Button text=\"Join\" onClick={() => joinTeam(Team.Right)} />\r\n          </div>\r\n        </CenteredColumn>\r\n      </CenteredRow>\r\n      {gameState.roundPhase === RoundPhase.PickTeams && (\r\n        <Button text=\"Start Game\" onClick={startGame} />\r\n      )}\r\n    </CenteredColumn>\r\n  );\r\n}\r\n","import { GameType, PlayersTeams, GameState, Team } from \"./GameState\";\r\nimport { NewRound } from \"./NewRound\";\r\n\r\nexport function NewTeamGame(\r\n  players: PlayersTeams,\r\n  startPlayer: string,\r\n  gameState: GameState\r\n): Partial<GameState> {\r\n  const initialScores: Partial<GameState> = {\r\n    leftScore: 0,\r\n    rightScore: 0,\r\n  };\r\n\r\n  const playerTeam = players[startPlayer].team;\r\n  if (playerTeam === Team.Left) {\r\n    initialScores.rightScore = 1;\r\n  } else {\r\n    initialScores.leftScore = 1;\r\n  }\r\n\r\n  return {\r\n    ...NewRound(startPlayer, gameState),\r\n    ...initialScores,\r\n    previousTurn: null,\r\n    gameType: GameType.Teams,\r\n  };\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GameType, Team, TeamName } from \"../../state/GameState\";\r\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Animate } from \"../common/Animate\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport function Scoreboard() {\r\n  const { gameState } = useContext(GameModelContext);\r\n\r\n  const style = {\r\n    borderTop: \"1px solid black\",\r\n    margin: 16,\r\n    paddingTop: 16,\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  if (gameState.gameType === GameType.Freeplay) {\r\n    return (\r\n      <CenteredColumn style={style}>\r\n        <em>Free Play</em>\r\n        <CenteredRow style={{ flexWrap: \"wrap\" }}>\r\n          {Object.keys(gameState.players).map(toPlayerRow)}\r\n        </CenteredRow>\r\n      </CenteredColumn>\r\n    );\r\n  }\r\n\r\n  if (gameState.gameType === GameType.Cooperative) {\r\n    const cardsRemaining = 7 + gameState.coopBonusTurns - gameState.turnsTaken;\r\n    return (\r\n      <CenteredColumn style={style}>\r\n        <em>Cooperative Score: {gameState.coopScore} POINTS</em>\r\n        <div>\r\n          {cardsRemaining === 0\r\n            ? \"Last Card!\"\r\n            : \"Cards remaining: \" + cardsRemaining}\r\n        </div>\r\n        <CenteredRow style={{ flexWrap: \"wrap\" }}>\r\n          {Object.keys(gameState.players).map(toPlayerRow)}\r\n        </CenteredRow>\r\n      </CenteredColumn>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CenteredRow style={style}>\r\n      <TeamColumn team={Team.Left} score={gameState.leftScore} />\r\n      <TeamColumn team={Team.Right} score={gameState.rightScore} />\r\n    </CenteredRow>\r\n  );\r\n}\r\n\r\nfunction TeamColumn(props: { team: Team; score: number }) {\r\n  const { gameState } = useContext(GameModelContext);\r\n\r\n  const members = Object.keys(gameState.players).filter(\r\n    (playerId) => gameState.players[playerId].team === props.team\r\n  );\r\n\r\n  return (\r\n    <CenteredColumn style={{ alignItems: \"flex-start\" }}>\r\n      <div>\r\n        {TeamName(props.team)}: <AnimatableScore score={props.score} /> POINTS\r\n      </div>\r\n      {members.map(toPlayerRow)}\r\n    </CenteredColumn>\r\n  );\r\n}\r\n\r\nfunction AnimatableScore(props: { score: number }) {\r\n  const lastScore = useRef(props.score);\r\n\r\n  useEffect(() => {\r\n    lastScore.current = props.score;\r\n  }, [props.score]);\r\n\r\n  if (props.score - lastScore.current === 0) {\r\n    return <span>{props.score}</span>;\r\n  }\r\n\r\n  return (\r\n    <span style={{ position: \"relative\" }}>\r\n      {props.score}\r\n      <Animate\r\n        animation=\"fade-disappear-up\"\r\n        style={{\r\n          position: \"absolute\",\r\n          fontSize: \"small\",\r\n          top: -16,\r\n          right: 0,\r\n        }}\r\n      >\r\n        +{props.score - lastScore.current}\r\n      </Animate>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction toPlayerRow(playerId: string) {\r\n  return <PlayerRow key={playerId} playerId={playerId} />;\r\n}\r\n\r\nfunction PlayerRow(props: { playerId: string }) {\r\n  const { gameState, setGameState } = useContext(GameModelContext);\r\n  const player = gameState.players[props.playerId];\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n  const iconContainerStyle = {\r\n    marginLeft: 4,\r\n    width: 20,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ marginLeft: 16, display: \"flex\", flexFlow: \"row\" }}\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n    >\r\n      {player.name}\r\n      {hovered ? (\r\n        <div\r\n          style={{\r\n            ...iconContainerStyle,\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => {\r\n            delete gameState.players[props.playerId];\r\n            setGameState(gameState);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faTimesCircle} />\r\n        </div>\r\n      ) : (\r\n        <div style={iconContainerStyle} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { GameType, RoundPhase } from \"../../state/GameState\";\r\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\r\nimport { Button } from \"../common/Button\";\r\nimport { LongwaveAppTitle } from \"../common/Title\";\r\nimport { useContext } from \"react\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { NewRound } from \"../../state/NewRound\";\r\n\r\nexport function SetupGame() {\r\n  const { gameState, setGameState, localPlayer } = useContext(GameModelContext);\r\n\r\n  const startGame = (gameType: GameType) => {\r\n    if (gameType === GameType.Teams) {\r\n      setGameState({\r\n        roundPhase: RoundPhase.PickTeams,\r\n        gameType,\r\n      });\r\n    } else {\r\n      setGameState({\r\n        ...NewRound(localPlayer.id, gameState),\r\n        gameType,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CenteredColumn>\r\n      <LongwaveAppTitle />\r\n      <CenteredRow style={{ flexWrap: \"wrap\" }}>\r\n        <Button\r\n          text=\"Standard (Teams): 4+ Players\"\r\n          onClick={() => startGame(GameType.Teams)}\r\n        />\r\n        <Button\r\n          text=\"Cooperative: 2+ Players\"\r\n          onClick={() => startGame(GameType.Cooperative)}\r\n        />\r\n        <Button\r\n          text=\"Free Play: 2+ Players\"\r\n          onClick={() => startGame(GameType.Freeplay)}\r\n        />\r\n      </CenteredRow>\r\n    </CenteredColumn>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { TeamReverse, TeamName } from \"../../state/GameState\";\r\nimport { Spectrum } from \"../common/Spectrum\";\r\nimport { CenteredColumn, CenteredRow } from \"../common/LayoutElements\";\r\nimport { Button } from \"../common/Button\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { ScoreTeamRound } from \"../../state/ScoreRound\";\r\n\r\nexport function CounterGuess() {\r\n  const {\r\n    gameState,\r\n    localPlayer,\r\n    clueGiver,\r\n    spectrumCard,\r\n    setGameState,\r\n  } = useContext(GameModelContext);\r\n\r\n  if (!clueGiver) {\r\n    return null;\r\n  }\r\n\r\n  const notMyTurn = clueGiver.team === localPlayer.team;\r\n  const counterGuessTeamString = TeamName(TeamReverse(clueGiver.team));\r\n\r\n  if (notMyTurn) {\r\n    return (\r\n      <div>\r\n        <Spectrum spectrumCard={spectrumCard} guessingValue={gameState.guess} />\r\n        <CenteredColumn>\r\n          <div>\r\n            {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\r\n          </div>\r\n          <div>Waiting for {counterGuessTeamString} to guess left/right...</div>\r\n        </CenteredColumn>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Spectrum spectrumCard={spectrumCard} guessingValue={gameState.guess} />\r\n      <CenteredColumn>\r\n        <div>\r\n          {clueGiver.name}'s clue: <strong>{gameState.clue}</strong>\r\n        </div>\r\n      </CenteredColumn>\r\n      <CenteredRow>\r\n        <Button\r\n          text=\"Target is to the Left\"\r\n          onClick={() =>\r\n            setGameState(ScoreTeamRound(gameState, clueGiver.team, \"left\"))\r\n          }\r\n        />\r\n        <Button\r\n          text=\"Target is to the Right\"\r\n          onClick={() =>\r\n            setGameState(ScoreTeamRound(gameState, clueGiver.team, \"right\"))\r\n          }\r\n        />\r\n      </CenteredRow>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TurnSummaryModel } from \"../../state/GameState\";\r\nimport { CenteredColumn } from \"../common/LayoutElements\";\r\nimport { Spectrum } from \"../common/Spectrum\";\r\n\r\nexport function PreviousTurnResult(props: TurnSummaryModel) {\r\n  const style: React.CSSProperties = {\r\n    borderTop: \"1px solid black\",\r\n    margin: 16,\r\n    paddingTop: 16,\r\n  };\r\n\r\n  const glassStyle: React.CSSProperties = {\r\n    position: \"absolute\",\r\n    zIndex: 10,\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      <CenteredColumn>\r\n        <em>Previous Turn</em>\r\n      </CenteredColumn>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <div style={glassStyle} />\r\n        <Spectrum\r\n          spectrumCard={props.spectrumCard}\r\n          handleValue={props.guess}\r\n          targetValue={props.spectrumTarget}\r\n        />\r\n        <CenteredColumn>\r\n          <div>\r\n            {props.clueGiverName}'s clue: <strong>{props.clue}</strong>\r\n          </div>\r\n        </CenteredColumn>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { RoundPhase, GameType, Team } from \"../../state/GameState\";\r\nimport { GiveClue } from \"./GiveClue\";\r\nimport { MakeGuess } from \"./MakeGuess\";\r\nimport { ViewScore } from \"./ViewScore\";\r\nimport { JoinTeam } from \"./JoinTeam\";\r\nimport { Scoreboard } from \"./Scoreboard\";\r\nimport { SetupGame } from \"./SetupGame\";\r\nimport { CounterGuess } from \"./CounterGuess\";\r\nimport { useContext } from \"react\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { PreviousTurnResult } from \"./PreviousTurnResult\";\r\n\r\nexport function ActiveGame() {\r\n  const { gameState, localPlayer } = useContext(GameModelContext);\r\n\r\n  if (gameState.roundPhase === RoundPhase.SetupGame) {\r\n    return <SetupGame />;\r\n  }\r\n\r\n  if (\r\n    gameState.gameType === GameType.Teams &&\r\n    (gameState.roundPhase === RoundPhase.PickTeams ||\r\n      localPlayer.team === Team.Unset)\r\n  ) {\r\n    return <JoinTeam />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {gameState.roundPhase === RoundPhase.GiveClue && <GiveClue />}\r\n      {gameState.roundPhase === RoundPhase.MakeGuess && <MakeGuess />}\r\n      {gameState.roundPhase === RoundPhase.CounterGuess && <CounterGuess />}\r\n      {gameState.roundPhase === RoundPhase.ViewScore && <ViewScore />}\r\n      <Scoreboard />\r\n      {gameState.previousTurn && (\r\n        <PreviousTurnResult {...gameState.previousTurn} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CenteredRow } from \"./LayoutElements\";\r\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useContext } from \"react\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { InitialGameState } from \"../../state/GameState\";\r\n\r\nexport function RoomIdHeader() {\r\n  const { roomId } = useParams();\r\n\r\n  return (\r\n    <CenteredRow\r\n      style={{\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\",\r\n        color: \"gray\",\r\n      }}\r\n    >\r\n      <div style={{ margin: 4, padding: 4 }}>Room ID: {roomId}</div>\r\n      <Tippy content={<RoomMenu />} interactive placement=\"bottom-end\">\r\n        <div tabIndex={0} style={{ padding: 8 }}>\r\n          <FontAwesomeIcon icon={faEllipsisV} />\r\n        </div>\r\n      </Tippy>\r\n    </CenteredRow>\r\n  );\r\n}\r\n\r\nfunction RoomMenu() {\r\n  const { setGameState } = useContext(GameModelContext);\r\n\r\n  return (\r\n    <div\r\n      tabIndex={0}\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={() => setGameState(InitialGameState())}\r\n    >\r\n      Reset Room\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { ActiveGame } from \"./ActiveGame\";\r\nimport { BuildGameModel } from \"../../state/BuildGameModel\";\r\nimport { CenteredRow, CenteredColumn } from \"../common/LayoutElements\";\r\nimport {\r\n  InitialGameState,\r\n  GameState,\r\n  Team,\r\n  GameType,\r\n  RoundPhase,\r\n} from \"../../state/GameState\";\r\n\r\nexport function FakeRooms() {\r\n  const [gameState, setGameState] = useState<GameState>({\r\n    ...InitialGameState(),\r\n    gameType: GameType.Teams,\r\n    roundPhase: RoundPhase.PickTeams,\r\n    players: {\r\n      ul: {\r\n        name: \"Upper Left\",\r\n        team: Team.Left,\r\n      },\r\n      ll: {\r\n        name: \"Lower Left\",\r\n        team: Team.Left,\r\n      },\r\n      ur: {\r\n        name: \"Upper Right\",\r\n        team: Team.Right,\r\n      },\r\n      lr: {\r\n        name: \"Lower Right\",\r\n        team: Team.Right,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPartialGameState = (newState: Partial<GameState>) =>\r\n    setGameState({\r\n      ...gameState,\r\n      ...newState,\r\n    });\r\n\r\n  const style: React.CSSProperties = {\r\n    width: 500,\r\n    margin: 4,\r\n    padding: 4,\r\n    border: \"1px solid black\",\r\n  };\r\n\r\n  const renderGame = (playerId: string) => (\r\n    <div style={style}>\r\n      <GameModelContext.Provider\r\n        value={BuildGameModel(gameState, setPartialGameState, playerId)}\r\n      >\r\n        <ActiveGame />\r\n      </GameModelContext.Provider>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CenteredRow\r\n      style={{ alignItems: \"stretch\", position: \"absolute\", top: 100, left: 0 }}\r\n    >\r\n      <CenteredColumn\r\n        style={{\r\n          alignItems: \"stretch\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {renderGame(\"ul\")}\r\n        {renderGame(\"ll\")}\r\n      </CenteredColumn>\r\n      <CenteredColumn\r\n        style={{\r\n          alignItems: \"stretch\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        {renderGame(\"ur\")}\r\n        {renderGame(\"lr\")}\r\n      </CenteredColumn>\r\n    </CenteredRow>\r\n  );\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useStorageBackedState } from \"../hooks/useStorageBackedState\";\r\nimport { useNetworkBackedGameState } from \"../hooks/useNetworkBackedGameState\";\r\nimport { InputName } from \"./InputName\";\r\nimport { RandomFourCharacterString } from \"../../state/RandomFourCharacterString\";\r\nimport { GameModelContext } from \"../../state/GameModelContext\";\r\nimport { ActiveGame } from \"./ActiveGame\";\r\nimport { BuildGameModel } from \"../../state/BuildGameModel\";\r\nimport { RoomIdHeader } from \"../common/RoomIdHeader\";\r\nimport { FakeRooms } from \"./FakeRooms\";\r\n\r\nexport function GameRoom() {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  if (roomId === undefined) {\r\n    throw new Error(\"RoomId missing\");\r\n  }\r\n\r\n  const [playerName, setPlayerName] = useStorageBackedState(\"\", \"name\");\r\n\r\n  const [playerId] = useStorageBackedState(\r\n    RandomFourCharacterString(),\r\n    \"playerId\"\r\n  );\r\n\r\n  const [gameState, setGameState] = useNetworkBackedGameState(\r\n    roomId,\r\n    playerId,\r\n    playerName\r\n  );\r\n\r\n  if (roomId === \"MULTIPLAYER_TEST\") {\r\n    return <FakeRooms />;\r\n  }\r\n\r\n  const gameModel = BuildGameModel(gameState, setGameState, playerId);\r\n\r\n  if (playerName.length === 0) {\r\n    return (\r\n      <InputName\r\n        setName={(name) => {\r\n          setPlayerName(name);\r\n          gameState.players[playerId].name = name;\r\n          setGameState(gameState);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  if (searchParams.get(\"rocketcrab\")) {\r\n    const rocketcrabPlayerName = searchParams.get(\"name\");\r\n    if (rocketcrabPlayerName !== null && rocketcrabPlayerName !== playerName) {\r\n      setPlayerName(rocketcrabPlayerName);\r\n    }\r\n  }\r\n\r\n  if (!gameState?.players?.[playerId]) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <GameModelContext.Provider value={gameModel}>\r\n      <RoomIdHeader />\r\n      <ActiveGame />\r\n    </GameModelContext.Provider>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { database } from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { GameState, InitialGameState, Team } from \"../../state/GameState\";\r\n\r\nexport function useNetworkBackedGameState(\r\n  roomId: string,\r\n  playerId: string,\r\n  playerName: string\r\n): [GameState, (newState: Partial<GameState>) => void] {\r\n  const [gameState, setGameState] = useState<GameState>(InitialGameState());\r\n\r\n  useEffect(() => {\r\n    const dbRef = database().ref(\"rooms/\" + roomId);\r\n\r\n    dbRef.on(\"value\", (appState) => {\r\n      const networkGameState: GameState = appState.val();\r\n      const completeGameState = {\r\n        ...InitialGameState(),\r\n        ...networkGameState,\r\n      };\r\n\r\n      if (networkGameState?.roundPhase === undefined) {\r\n        dbRef.set(completeGameState);\r\n        return;\r\n      }\r\n\r\n      if (completeGameState.players[playerId] === undefined) {\r\n        completeGameState.players[playerId] = {\r\n          name: playerName,\r\n          team: Team.Unset,\r\n        };\r\n        dbRef.set(completeGameState);\r\n        return;\r\n      }\r\n\r\n      setGameState(completeGameState);\r\n    });\r\n    return () => dbRef.off();\r\n  }, [playerId, playerName, roomId]);\r\n\r\n  const dbRef = database().ref(\"rooms/\" + roomId);\r\n\r\n  return [\r\n    gameState,\r\n    (newState: Partial<GameState>) => {\r\n      dbRef.set({\r\n        ...gameState,\r\n        ...newState,\r\n      });\r\n    },\r\n  ];\r\n}\r\n","import React from \"react\";\r\n\r\nexport function CommonFooter() {\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: 8,\r\n        borderTop: \"1px solid black\",\r\n        color: \"gray\",\r\n        fontSize: \"small\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <p style={{ margin: 8 }}>\r\n        <Link href=\"https://www.wavelength.zone/\" text=\"Wavelength\" /> is\r\n        designed by Wolfgang Warsch, Alex Hague, and Justin Vickers.{\" \"}\r\n        <Link\r\n          href=\"https://github.com/cynicaloptimist/longwave\"\r\n          text=\"Adapted for web\"\r\n        />{\" \"}\r\n        by Evan Bailey and Margarethe Schoen.\r\n      </p>\r\n      {/* we want referrer, so: */}\r\n      {/* eslint-disable-next-line react/jsx-no-target-blank */}\r\n      <a target=\"_blank\" href=\"https://www.patreon.com/improvedinitiative\">\r\n        <img\r\n          alt=\"Patreon logo\"\r\n          title=\"Support us on Patreon!\"\r\n          src=\"./Digital-Patreon-Wordmark_FieryCoral.png\"\r\n          style={{ width: \"150px\", margin: 8 }}\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Link(props: { href: string; text: string }) {\r\n  return (\r\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {props.text}\r\n    </a>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RandomFourCharacterString } from \"../../state/RandomFourCharacterString\";\r\nimport { CenteredColumn } from \"./LayoutElements\";\r\nimport { Button } from \"./Button\";\r\nimport { LongwaveAppTitle } from \"./Title\";\r\n\r\nexport function LandingPage() {\r\n  const history = useHistory();\r\n  return (\r\n    <CenteredColumn>\r\n      <LongwaveAppTitle />\r\n      <Button\r\n        text=\"Create Room\"\r\n        onClick={() => {\r\n          history.push(\"/\" + RandomFourCharacterString());\r\n        }}\r\n      />\r\n      <p style={{ margin: 8 }}>\r\n        <strong>Longwave</strong> is an online, real-time adaptation of the{\" \"}\r\n        <em>Wavelength</em> board game. Best enjoyed with voice chat!\r\n      </p>\r\n    </CenteredColumn>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"../App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { GameRoom } from \"./gameplay/GameRoom\";\r\nimport { CenteredColumn } from \"./common/LayoutElements\";\r\nimport { CommonFooter } from \"./common/CommonFooter\";\r\nimport { LandingPage } from \"./common/LandingPage\";\r\n\r\nconst style: React.CSSProperties = {\r\n  maxWidth: 500,\r\n  margin: 4,\r\n  padding: 4,\r\n  border: \"1px solid black\",\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <CenteredColumn>\r\n      <div style={style}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/:roomId\">\r\n              <GameRoom />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <LandingPage />\r\n            </Route>\r\n          </Switch>\r\n          <CommonFooter />\r\n        </BrowserRouter>\r\n      </div>\r\n    </CenteredColumn>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"./index.css\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"tippy.js/dist/tippy.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { initializeApp, analytics } from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\n\r\nimport App from \"./components/App\";\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\n\r\ninitializeApp(firebaseConfig);\r\nanalytics().logEvent(\"screen_view\", {\r\n  app_name: \"Longwave\",\r\n  screen_name: \"index\",\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyAyPMuIGreq81gLErYeKGkEje851Xdh_kc\",\r\n  authDomain: \"wavelength-online.firebaseapp.com\",\r\n  databaseURL: \"https://wavelength-online.firebaseio.com\",\r\n  projectId: \"wavelength-online\",\r\n  storageBucket: \"wavelength-online.appspot.com\",\r\n  messagingSenderId: \"811157116454\",\r\n  appId: \"1:811157116454:web:be3d3e6b17629700c038e7\",\r\n  measurementId: \"G-XZ13S15LMC\",\r\n};\r\n"],"sourceRoot":""}